"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["index.html","5251e67467946a14603438a42c34e238"],["static/css/main.ed833b4e.css","d9dfb882846f537db98ccca7015eb154"],["static/js/main.75c3d350.js","e05f36d457c242b6412960cf5ab8e708"],["static/media/andrey.755157db.jpg","755157dbb9ec8f2b8d1ecb32c523782a"],["static/media/anton.22f24eb1.jpg","22f24eb173de1217ae52bbd5af050a01"],["static/media/evgeniya.966389c9.jpg","966389c9e1152275d300b3ef7756ff27"],["static/media/icon-header.f0b8cf09.png","f0b8cf09efa59bdebd7d5c2d17fa8dc8"],["static/media/icon_gif.803e08d6.svg","803e08d67f143ffcdf56d1ca5e7934ac"],["static/media/icon_other.fde2e768.svg","fde2e7682166dd7ba4f39f4f225c215b"],["static/media/icon_psd.f9541ef1.svg","f9541ef1bddb67ede1c017d088ba7ab7"],["static/media/icon_rar.ff2ffb91.svg","ff2ffb91e3c7223a846104e3fbfa783c"],["static/media/icon_zip.d789edc3.svg","d789edc33db490c310984c98984f49ff"],["static/media/julia.0d7c4d83.jpg","0d7c4d830ad5e7aa81cecfc75f215ede"],["static/media/notification.0b4ac1dc.ttf","0b4ac1dc75df35e169b70d7719afe4cc"],["static/media/notification.5bee74ca.svg","5bee74caefdf9d0a834915f6c8eeb259"],["static/media/notification.651771e1.woff","651771e1df95c807c99608188d0a4287"],["static/media/notification.c0d3c94c.eot","c0d3c94cd6112550c51d7d1ed13b9da1"],["static/media/sergey.bdf69206.jpg","bdf69206966538f6a4cc0fa6fcfde1ac"],["static/media/tanya.5ee93a9d.jpg","5ee93a9d77a9328bcaf425637e1bc207"],["static/media/unknown-user.5fa718c4.svg","5fa718c4f5cb60591ba64082a0676c9e"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,a,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),c.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),c=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),c]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var n=new Request(a,{credentials:"same-origin"});return fetch(n).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);t=urlsToCacheKeys.has(a);t||(a=addDirectoryIndex(a,"index.html"),t=urlsToCacheKeys.has(a));!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL("/index.html",self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});